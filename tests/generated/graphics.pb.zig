// Code generated by protoc-gen-zig
///! package graphics
const std = @import("std");
const Allocator = std.mem.Allocator;
const ArrayList = std.ArrayList;

const protobuf = @import("protobuf");
const ManagedString = protobuf.ManagedString;
const fd = protobuf.fd;

pub const InventoryItem = struct {
    slot: i32,
    name: ManagedString,
    image: i32,
    quantity: i32,
    description: ManagedString,
    id: i32,

    pub const _desc_table = .{
        .slot = fd(1, .{ .Varint = .Simple }),
        .name = fd(2, .String),
        .image = fd(3, .{ .Varint = .Simple }),
        .quantity = fd(4, .{ .Varint = .Simple }),
        .description = fd(5, .String),
        .id = fd(6, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const Character = struct {
    id: ManagedString,
    class: i32,
    gender: i32,
    race: i32,
    head: i32,
    body: i32,
    helmet: i32,
    right_hand: i32,
    nick: ManagedString,
    left_hand: i32,
    color: ManagedString,
    clan: ManagedString,
    enabled: bool,

    pub const _desc_table = .{
        .id = fd(1, .String),
        .class = fd(2, .{ .Varint = .Simple }),
        .gender = fd(3, .{ .Varint = .Simple }),
        .race = fd(4, .{ .Varint = .Simple }),
        .head = fd(5, .{ .Varint = .Simple }),
        .body = fd(6, .{ .Varint = .Simple }),
        .helmet = fd(7, .{ .Varint = .Simple }),
        .right_hand = fd(8, .{ .Varint = .Simple }),
        .nick = fd(9, .String),
        .left_hand = fd(10, .{ .Varint = .Simple }),
        .color = fd(11, .String),
        .clan = fd(12, .String),
        .enabled = fd(13, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const Alignment = struct {
    id: ManagedString,
    name: ManagedString,
    color: ManagedString,

    pub const _desc_table = .{
        .id = fd(1, .String),
        .name = fd(2, .String),
        .color = fd(3, .String),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const Index = struct {
    id: i32,
    grh: ArrayList(i32),
    offset_x: i32,
    offset_y: i32,
    animations: ArrayList(AnimationsEntry),
    name: ManagedString,

    pub const _desc_table = .{
        .id = fd(1, .{ .Varint = .Simple }),
        .grh = fd(2, .{ .PackedList = .{ .Varint = .Simple } }),
        .offset_x = fd(3, .{ .Varint = .Simple }),
        .offset_y = fd(4, .{ .Varint = .Simple }),
        .animations = fd(5, .{ .List = .{ .SubMessage = {} } }),
        .name = fd(6, .String),
    };

    pub const AnimationsEntry = struct {
        key: ManagedString,
        value: i32,

        pub const _desc_table = .{
            .key = fd(1, .String),
            .value = fd(2, .{ .Varint = .Simple }),
        };

        pub usingnamespace protobuf.MessageMixins(@This());
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const StoredChunk = struct {
    chunk_id: i32,
    entities: ArrayList(MapEntity),

    pub const _desc_table = .{
        .chunk_id = fd(1, .{ .Varint = .Simple }),
        .entities = fd(2, .{ .List = .{ .SubMessage = {} } }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const MapEntity = struct {
    x: i32,
    y: i32,
    light: ?Light,
    collider: ?Shape,
    graphic_id: i32,
    entity_id: ManagedString,
    vertical_graphic: bool,

    pub const _desc_table = .{
        .x = fd(1, .{ .Varint = .Simple }),
        .y = fd(2, .{ .Varint = .Simple }),
        .light = fd(3, .{ .SubMessage = {} }),
        .collider = fd(4, .{ .SubMessage = {} }),
        .graphic_id = fd(5, .{ .Varint = .Simple }),
        .entity_id = fd(6, .String),
        .vertical_graphic = fd(7, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const Light = struct {
    hue: f32,
    height: f32,
    radius: f32,
    saturation: f32,
    fall_off: f32,

    pub const _desc_table = .{
        .hue = fd(1, .{ .FixedInt = .I32 }),
        .height = fd(2, .{ .FixedInt = .I32 }),
        .radius = fd(3, .{ .FixedInt = .I32 }),
        .saturation = fd(4, .{ .FixedInt = .I32 }),
        .fall_off = fd(5, .{ .FixedInt = .I32 }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const Point = struct {
    x: i32,
    y: i32,

    pub const _desc_table = .{
        .x = fd(1, .{ .Varint = .Simple }),
        .y = fd(2, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const Shape = struct {
    points: ArrayList(Point),

    pub const _desc_table = .{
        .points = fd(1, .{ .List = .{ .SubMessage = {} } }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const Npc = struct {
    x: i32,
    y: i32,
    items: ArrayList(InventoryItem),
    name: ManagedString,
    alignment: ManagedString,
    ai: ManagedString,
    min_hp: i32,
    max_hp: i32,
    min_mana: i32,
    max_mana: i32,
    min_strenght: i32,
    max_strenght: i32,
    skills: ArrayList(SkillsEntry),
    abilities: ArrayList(AbilitiesEntry),
    visual: ?Character,

    pub const _desc_table = .{
        .x = fd(1, .{ .Varint = .Simple }),
        .y = fd(2, .{ .Varint = .Simple }),
        .items = fd(3, .{ .List = .{ .SubMessage = {} } }),
        .name = fd(4, .String),
        .alignment = fd(5, .String),
        .ai = fd(6, .String),
        .min_hp = fd(7, .{ .Varint = .Simple }),
        .max_hp = fd(8, .{ .Varint = .Simple }),
        .min_mana = fd(9, .{ .Varint = .Simple }),
        .max_mana = fd(10, .{ .Varint = .Simple }),
        .min_strenght = fd(11, .{ .Varint = .Simple }),
        .max_strenght = fd(12, .{ .Varint = .Simple }),
        .skills = fd(13, .{ .List = .{ .SubMessage = {} } }),
        .abilities = fd(14, .{ .List = .{ .SubMessage = {} } }),
        .visual = fd(15, .{ .SubMessage = {} }),
    };

    pub const SkillsEntry = struct {
        key: i32,
        value: i32,

        pub const _desc_table = .{
            .key = fd(1, .{ .Varint = .Simple }),
            .value = fd(2, .{ .Varint = .Simple }),
        };

        pub usingnamespace protobuf.MessageMixins(@This());
    };

    pub const AbilitiesEntry = struct {
        key: i32,
        value: i32,

        pub const _desc_table = .{
            .key = fd(1, .{ .Varint = .Simple }),
            .value = fd(2, .{ .Varint = .Simple }),
        };

        pub usingnamespace protobuf.MessageMixins(@This());
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const Tile = struct {
    x: i32,
    y: i32,
    tileset_grh: i32,
    tileset: i32,
    flags: i32,
    blocked: i32,
    layer2: i32,
    layer3: i32,
    layer4: i32,

    pub const _desc_table = .{
        .x = fd(1, .{ .Varint = .Simple }),
        .y = fd(2, .{ .Varint = .Simple }),
        .tileset_grh = fd(3, .{ .Varint = .Simple }),
        .tileset = fd(4, .{ .Varint = .Simple }),
        .flags = fd(5, .{ .Varint = .Simple }),
        .blocked = fd(6, .{ .Varint = .Simple }),
        .layer2 = fd(7, .{ .Varint = .Simple }),
        .layer3 = fd(8, .{ .Varint = .Simple }),
        .layer4 = fd(9, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const MapItem = struct {
    x: i32,
    y: i32,
    item: i32,
    amount: i32,

    pub const _desc_table = .{
        .x = fd(1, .{ .Varint = .Simple }),
        .y = fd(2, .{ .Varint = .Simple }),
        .item = fd(3, .{ .Varint = .Simple }),
        .amount = fd(4, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const GraphicsDB = struct {
    textures: ArrayList(Texture),
    graphics: ArrayList(Graphic),
    bodies: ArrayList(Index),
    fxs: ArrayList(Index),
    heads: ArrayList(Index),
    helmets: ArrayList(Index),
    shields: ArrayList(Index),
    weapons: ArrayList(Index),
    scripts: ArrayList(Script),
    spine: ArrayList(Spine),

    pub const _desc_table = .{
        .textures = fd(1, .{ .List = .{ .SubMessage = {} } }),
        .graphics = fd(2, .{ .List = .{ .SubMessage = {} } }),
        .bodies = fd(4, .{ .List = .{ .SubMessage = {} } }),
        .fxs = fd(5, .{ .List = .{ .SubMessage = {} } }),
        .heads = fd(6, .{ .List = .{ .SubMessage = {} } }),
        .helmets = fd(7, .{ .List = .{ .SubMessage = {} } }),
        .shields = fd(8, .{ .List = .{ .SubMessage = {} } }),
        .weapons = fd(9, .{ .List = .{ .SubMessage = {} } }),
        .scripts = fd(10, .{ .List = .{ .SubMessage = {} } }),
        .spine = fd(11, .{ .List = .{ .SubMessage = {} } }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const Script = struct {
    path: ManagedString,
    code: ManagedString,

    pub const _desc_table = .{
        .path = fd(1, .String),
        .code = fd(2, .String),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const SubTexture = struct {
    diffuse: ManagedString,
    normal: ManagedString,
    emmisive: ManagedString,
    width: i32,
    height: i32,

    pub const _desc_table = .{
        .diffuse = fd(1, .String),
        .normal = fd(2, .String),
        .emmisive = fd(3, .String),
        .width = fd(4, .{ .Varint = .Simple }),
        .height = fd(5, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const Texture = struct {
    diffuse: ManagedString,
    normal: ManagedString,
    emmisive: ManagedString,
    width: i32,
    height: i32,
    dxt1: ?SubTexture,
    dxt3: ?SubTexture,
    dxt5: ?SubTexture,

    pub const _desc_table = .{
        .diffuse = fd(1, .String),
        .normal = fd(2, .String),
        .emmisive = fd(3, .String),
        .width = fd(4, .{ .Varint = .Simple }),
        .height = fd(5, .{ .Varint = .Simple }),
        .dxt1 = fd(6, .{ .SubMessage = {} }),
        .dxt3 = fd(7, .{ .SubMessage = {} }),
        .dxt5 = fd(8, .{ .SubMessage = {} }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const Graphic = struct {
    id: i32,
    name: ManagedString,
    type: ?type_union,

    pub const _type_case = enum {
        sprite,
        animation,
    };
    pub const type_union = union(_type_case) {
        sprite: Sprite,
        animation: Animation,
        pub const _union_desc = .{
            .sprite = fd(2, .{ .SubMessage = {} }),
            .animation = fd(3, .{ .SubMessage = {} }),
        };
    };

    pub const _desc_table = .{
        .id = fd(1, .{ .Varint = .Simple }),
        .name = fd(4, .String),
        .type = fd(null, .{ .OneOf = type_union }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const Sprite = struct {
    texture: i32,
    x: i32,
    y: i32,
    w: i32,
    h: i32,
    pivot_x: i32,
    pivot_y: i32,

    pub const _desc_table = .{
        .texture = fd(1, .{ .Varint = .Simple }),
        .x = fd(2, .{ .Varint = .Simple }),
        .y = fd(3, .{ .Varint = .Simple }),
        .w = fd(4, .{ .Varint = .Simple }),
        .h = fd(5, .{ .Varint = .Simple }),
        .pivot_x = fd(6, .{ .Varint = .Simple }),
        .pivot_y = fd(7, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const Animation = struct {
    frames: ArrayList(i32),
    speed: f32,

    pub const _desc_table = .{
        .frames = fd(1, .{ .PackedList = .{ .Varint = .Simple } }),
        .speed = fd(2, .{ .FixedInt = .I32 }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const Spine = struct {
    name: ManagedString,
    json: ManagedString,
    atlas: ManagedString,

    pub const _desc_table = .{
        .name = fd(1, .String),
        .json = fd(2, .String),
        .atlas = fd(3, .String),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};
